# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
  - stage: NAveen
    jobs:
    - job: testjob1
      displayName: testjob
      steps:
      - script: |
                echo test
                touch test_touch.txt
                ls
      - task: PowerShell@2
        inputs:
          targetType: 'inline'
          script: |
            # Write your PowerShell commands here.
            
            Write-Host "Hello World"
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: $(System.DefaultWorkingDirectory)/test_touch.txt
          artifact: touch
      - script: |
              mkdir -p $(Build.ArtifactStagingDirectory)/pipeline_artifact
              cp $(Build.SourcesDirectory)/azure-pipelines.yml $(Build.ArtifactStagingDirectory)/pipeline_artifact/
              cp $(System.DefaultWorkingDirectory)/test_touch.txt $(Build.ArtifactStagingDirectory)/pipeline_artifact/
        displayName: "Copy pipeline YAML and test file to artifact staging directory"

      - task: PublishBuildArtifacts@1
        inputs:
          pathToPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: drop1

    - job: testjob2
      displayName: testjob2
      dependsOn: testjob1
      steps:
        - script: |
                  echo test in job 2
                  ls
        - task: DownloadPipelineArtifact@2
          inputs:
           artifactName: touch
           targetPath: $(System.DefaultWorkingDirectory)
        - script: |
                  echo test in job2 for second time
                  ls
        - task: DownloadBuildArtifacts@1
          inputs:
            artifactName: drop1
            downloadPath: $(system.DefaultWorkingDirectory)
            buildType: current
            downloadType: single
          displayName: Download_build_artifact

        - script: |
                  echo display after dowloding the build artifact
                  ls
          displayName: Dispalying after the downling build artict


    